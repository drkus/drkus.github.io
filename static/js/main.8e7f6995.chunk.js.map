{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Box","styled","div","H4Title","h4","props","color","Info","inventory","Detail","useParams","history","useHistory","selectProduct","shoes","find","a","parseInt","imgUrl","bConnet","undefined","useState","infoAblePop","infoAblePop변경","infoIsNotPop","infoIsNotPop변경","infoErrorPop","infoErrorPop변경","infoCnt","infoCnt변경","changCnt","TIMER_CNT","useEffect","infoPopTimer","console","log","document","getElementById","disabled","setTimeout","clearTimeout","INFO_CNT_TIMER","copyInventroy","className","src","alt","width","onClick","inventory변경","goBack","Card","i","Button","variant","as","Link","to","url","App","Data","shoes변경","addBtn","addBtn변경","loadingUi","loadingUi변경","loadingFailUi","loadingFailUi변경","linkUrl","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Form","inline","FormControl","type","placeholder","exact","path","Jumbotron","map","shoesData","axios","get","then","result","data","inventoryCopy","forEach","push","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e7f6995.chunk.js","sourcesContent":["/* eslint-disable */ \r\nexport default\r\n[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] ","/* eslint-disable */ \r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.css';\r\n\r\nlet Box = styled.div`\r\n    padding : 20px;\r\n`;\r\nlet H4Title = styled.h4`\r\n    font-size : 25px;\r\n    color : ${ props => props.color }\r\n`;\r\n\r\n// 프롭스로 보는 값은 {값}, 또는 \"문자\"로 가능\r\n\r\nfunction Detail(props){\r\n    // lifecyle hook과 비슷한 useEffect \r\n    // 기본적으로 컴포넌트 mount 될 때 실행 'return 함수'는 unmount 될 때 호출 ',[컴포넌트]'는 변경 될 때 실행\r\n    // tip : ,[] 설정 시 컴포넌트 최초 등장 시에만 동작\r\n    const INFO_POP_SHOW = true; // 재고 알림 팝업 노출 여부\r\n    // 파라미터 관련 \r\n    let { id } = useParams(); // 파라미터 id, 해당 페이지 파라미터 값 detail/id\r\n    let history = useHistory(); //  유저 방문 기록\r\n    let selectProduct = props.shoes.find((a) => {\r\n        return a.id == id;\r\n    });// 파라미터 url 과 data.js의 id 값 비교하여 참일 경우 해당 오브젝트(props.shoes) 값 리턴\r\n    id = parseInt(id); // 파라미터 id 값이 문자라 int형으로 파싱\r\n\r\n    // 이미지 관련\r\n    let imgUrl = ''; // url 문자 담을 변수\r\n    let bConnet = false; // 파라미터 값과 data.js의 id 값과 다를 경우, 다른 페이지를 보여주기 위한 bool 값\r\n    if( selectProduct != undefined && id == selectProduct.id){\r\n        bConnet = true;\r\n        imgUrl = 'https://codingapple1.github.io/shop/shoes' + ( id + 1 ) + '.jpg';\r\n    }\r\n    else{\r\n        bConnet = false;\r\n        imgUrl = '/auyumu.jpg';\r\n    }\r\n\r\n    let [infoAblePop, infoAblePop변경] = useState(true);//'재고 있음' 알림 팝업\r\n    let [infoIsNotPop, infoIsNotPop변경] = useState(false);// '재고 없음' 알림 팝업\r\n    let [infoErrorPop, infoErrorPop변경] = useState(false);// '에러 알림' 팝업\r\n\r\n    const TIME = 3;\r\n    let [infoCnt, infoCnt변경] = useState(TIME);\r\n    let changCnt = infoCnt;\r\n    const TIMER_ADD = 1000;\r\n    const TIMER_CNT = infoCnt * TIMER_ADD;\r\n\r\n    // 화면 초기화([주문하기] 버튼, n초(TIMER_CNT) 후 알림창 사라짐)\r\n    useEffect(() => {// 처음 화면 로드되면 [주문하기] 버튼 disabled 후, n초(TIMER_CNT) 후 disabled 해제\r\n        let infoPopTimer;\r\n        if(INFO_POP_SHOW){\r\n            console.log(props,props.inventory[id]);\r\n            document.getElementById('buyBtn').disabled = true;// [주문하기] 버튼 비활성화\r\n            if(props.inventory[id] > 0){// 재고 있을 경우, TIMER_CNT 후 알림 팝업 닫고 [주문하기] 버튼 활성화 \r\n                infoPopTimer = setTimeout(() => {\r\n                    infoAblePop변경(false);// '재고 있음 알림' 팝업 닫기\r\n                    document.getElementById('buyBtn').disabled = false;// [주문하기] 버튼 활성화\r\n        \r\n                }, TIMER_CNT);\r\n            }\r\n            else if(props.inventory[id] == 0){// 재고가 없을 경우\r\n                infoAblePop변경(false);// '재고 있음 알림' 팝업 닫기\r\n                infoIsNotPop변경(true);// '재고 없음 알림' 팝업 열기\r\n            }\r\n            else{// 그 밖에 잘못된 데이터가 있을 경우\r\n                infoErrorPop변경(true);// '에러 알림' 팝업 열기\r\n            }\r\n        }\r\n        else if(!INFO_POP_SHOW){\r\n            infoAblePop변경(false);// '재고 있음 알림' 팝업은 초기 값이 true, '재고 있음 알림' 팝업 닫기\r\n            if(props.inventory[id] > 0){// 재고 있을 경우 \r\n                document.getElementById('buyBtn').disabled = false; // [주문하기] 버튼 활성화\r\n            }\r\n            else if(props.inventory[id] == 0){// 재고가 없을 경우\r\n                document.getElementById('buyBtn').disabled = true;// [주문하기] 버튼 비활성화\r\n                infoAblePop변경(false);// '재고 있음 알림' 팝업 닫기\r\n                infoIsNotPop변경(true);// '재고 없음 알림' 팝업 열기\r\n            }\r\n            else{// 그 밖에 잘못된 데이터가 있을 경우\r\n                document.getElementById('buyBtn').disabled = true;// [주문하기] 버튼 비활성화\r\n                infoErrorPop변경(true);// '에러 알림' 팝업 열기\r\n            }\r\n        }\r\n        return () => { clearTimeout(infoPopTimer); }\r\n    },[]);\r\n\r\n    useEffect(() => { // 알림창 내 카운터\r\n        const INFO_CNT_TIMER = setTimeout(() => {\r\n            if(changCnt != 0 && infoAblePop){\r\n                changCnt--;\r\n                infoCnt변경(changCnt);\r\n            }\r\n        }, TIMER_ADD);\r\n        return () => { clearTimeout(INFO_CNT_TIMER); }\r\n    },[changCnt]);\r\n\r\n\r\n    // App.js props로 온 'inventory 뜻 : 재고' 관련 데이터\r\n    let copyInventroy = [...props.inventory]; // 깊은 복사\r\n    function CalInventory(arr){// arr은 배열로 [주문하기] 버튼 클릭 시, copyInventroy[id]를 받는다\r\n        if(!infoAblePop){// 재고 알림창 사라지고, 재고 감소\r\n            if(copyInventroy[id] != 0 && copyInventroy[id] > 0){// 재고 0까지 감소\r\n                copyInventroy[id] -= 1;\r\n                if(copyInventroy[id] > 0){\r\n                    props.inventory변경(copyInventroy);\r\n                }   \r\n                else if(copyInventroy[id] == 0){// 재고가 0 개일 경우, 재고 완전 소진, [주문하기] 버튼 disabled 변경 \r\n                    document.getElementById('buyBtn').disabled = true;\r\n                    props.inventory변경(copyInventroy);\r\n                    infoIsNotPop변경(true); // 품절 팝업 노출\r\n                }\r\n            }\r\n            else{// 품절(재고 0개) 이후, 뒤로가기, 캐시 등 브라우저 관리자모드 등에서 disabled 뚫고 클릭 시\r\n                document.getElementById('buyBtn').disabled = true;\r\n                infoErrorPop변경(true); // error 팝업 노출\r\n            }\r\n        }\r\n        else{// 대기 팝업 사라지기 전, 클릭 시\r\n            infoErrorPop변경(true); // error 팝업 노출\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Box>\r\n                <H4Title color=\"blue\">{ selectProduct.title }</H4Title>\r\n                <p>{ selectProduct.content }</p>\r\n                <p>{ selectProduct.price }원</p>\r\n                <Info inventory = { props.inventory[id] }></Info>\r\n            </Box>\r\n            {\r\n                bConnet === true\r\n                ? \r\n                <div className=\"row\">\r\n                {\r\n                    infoAblePop === true\r\n                    ?\r\n                    <div className=\"my-alert\">\r\n                        <p>{ infoCnt }초 후 주문 하실 수 있습니다.</p>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                {\r\n                    infoIsNotPop === true\r\n                    ?\r\n                    <div className=\"my-alert-end\">\r\n                        <p>상품이 품절 되었습니다.</p>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                {\r\n                    infoErrorPop === true\r\n                    ?\r\n                    <div className=\"my-alert-error\">\r\n                        <p>주문을 할 수 없습니다.</p>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                    <div className=\"col-md-12 product\">\r\n                        <img src={ imgUrl } alt=\"img\" width=\"100%\" />\r\n                    </div>\r\n                    <div className=\"col-md-12 mt-4\">\r\n                        \r\n                        \r\n                        <button id=\"buyBtn\" className=\"btn btn-danger\" onClick={() => { CalInventory(copyInventroy[id]); }}>주문하기</button>\r\n                        <button className=\"btn btn-danger\" onClick={() => { history.goBack();}}>뒤로가기</button> \r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <p>잘못된 상세페이지 접근 입니다.</p>\r\n                        <img src={ imgUrl } alt=\"img\" width=\"100%\" />\r\n                    </div>\r\n                </div>\r\n            }    \r\n\r\n        </div> \r\n    );\r\n}\r\n\r\nfunction Info(props){\r\n    return(\r\n        <p>재고 : {props.inventory} </p>\r\n    )\r\n}\r\n\r\nexport default Detail;\r\n","/* eslint-disable */ \nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar,Nav,NavDropdown,Form,FormControl,Button,Jumbotron } from'react-bootstrap';\nimport { useState } from 'react';\nimport Data from './data.js';\nimport Detail from './Detail.js';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [inventory, inventory변경] = useState([4,3,9]);// 재고 데이터\n  let [addBtn, addBtn변경] = useState(true); // 더보기 버튼 클릭 시, 더보기 버튼 노출 관련 bool 변수\n  let [loadingUi, loadingUi변경] = useState(false);// 로딩중 UI\n  let [loadingFailUi, loadingFailUi변경] = useState(false);\n  let [linkUrl, linkUrl변경] = useState(['/detail/']);// 이미지 선택 시 이동하는 경로 ]\n  let url = [...linkUrl];\n  \n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={ Link } to=\"/\">Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <Nav.Link as={ Link } to=\"/detail/0\">상품</Nav.Link> */}\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      \n      {/* 택 1, 해당 맨 위 */}\n      <Switch>\n        {/* 기본페이지 exact */}\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>신발 쇼핑몰 입니다.</h1>\n              <p>20% 한정 세일</p>\n              <p>\n                {/* <Button variant=\"primary\" as={ Link } to=\"/detail/0\">드러가기🥰</Button> */}\n              </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n            {\n              \n              shoes.map((shoesData,i) => {\n                return(\n                  <Card shoes={shoesData} i={i} key={i} url={url+i} />\n                )\n              })\n            }\n            {\n              addBtn === true \n              ?\n              <button className=\"btn btn-dark\" onClick={() => {\n                addBtn변경(false); // 더보기 버튼 미노출\n                loadingUi변경(true); // 로딩 중입니다.. 문구 노출\n                \n                axios.get('https://codingapple1.github.io/shop/data2.json')\n                .then((result) => { \n                  loadingUi변경(false); // 로딩 중입니다... 문구 제거\n                  shoes변경([...shoes, ...result.data]); // result.data가 data.js에 추가\n                  // (임시) 재고 데이터를 axios에서 받은 result.data 의 id 값을 inventory로 설정\n                  let inventoryCopy = [...inventory];\n                  result.data.forEach((a,i) => {\n                    inventoryCopy.push(result.data[i].id);\n                  });\n                  inventory변경(inventoryCopy);\n                })\n                .catch(() => { \n                  loadingFailUi변경(true);// 로딩 실패 문구 노출\n                  console.log('get error',result); \n                })\n              }}>더보기</button>\n              : null\n            }\n            {\n              loadingUi === true\n              ?\n              <div className=\"loading\"><p>로딩 중입니다..</p></div> \n              :\n              null\n            }\n            {\n              loadingFailUi === true\n              ?\n              <div className=\"loading\"><p>로딩 실패</p></div> \n              :\n              null\n            }\n               \n\n            </div> \n          </div>\n        </Route>\n\n        {/* 상세페이지 /:id url 파라미터 */}\n        <Route path=\"/detail/:id\">\n          <Detail shoes = { shoes } inventory = { inventory } inventory변경 = { inventory변경 }/>\n        </Route>  \n        {/* <Route path=\"/어쩌구\" componet={Modal}></Route> */}\n\n        {/* 그 외 페이지 /이후 파라미터 */}\n        <Route path=\"/:id\">\n            <div>404 error</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props){\n  return(\n    <div className=\"col-md-4\" >\n        <img alt=\"신발이미지\" src={ 'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg' } width=\"100%\"/>\n        <h4>{props.shoes.title}</h4>\n        <p>{props.shoes.content},{props.shoes.price}</p>\n        <Button className=\"cardBtn\" variant=\"primary\" as={ Link } to={props.url}>구매하기🥰</Button>\n    </div>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}